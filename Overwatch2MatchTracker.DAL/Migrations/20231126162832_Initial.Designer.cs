// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Overwatch2MatchTracker.DAL.Context;

#nullable disable

namespace Overwatch2MatchTracker.DAL.Migrations
{
    [DbContext(typeof(Overwatch2MatchTrackerDB))]
    [Migration("20231126162832_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Overwatch2MatchTracker.DAL.Entities.Base.Hero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("ElapsedTime")
                        .HasColumnType("time(7)");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Heroes");
                });

            modelBuilder.Entity("Overwatch2MatchTracker.DAL.Entities.Base.Mode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Modes");
                });

            modelBuilder.Entity("Overwatch2MatchTracker.DAL.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GroupSizeId")
                        .HasColumnType("int");

                    b.Property<int>("MapId")
                        .HasColumnType("int");

                    b.Property<int>("MatchResultId")
                        .HasColumnType("int");

                    b.Property<int>("ModeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupSizeId");

                    b.HasIndex("MapId");

                    b.HasIndex("MatchResultId");

                    b.HasIndex("ModeId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Overwatch2MatchTracker.DAL.Entities.GroupSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GroupSizes");
                });

            modelBuilder.Entity("Overwatch2MatchTracker.DAL.Entities.Map", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Maps");
                });

            modelBuilder.Entity("Overwatch2MatchTracker.DAL.Entities.MatchResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MatchResults");
                });

            modelBuilder.Entity("Overwatch2MatchTracker.DAL.Entities.SpecificPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("SpecificPlayers");
                });

            modelBuilder.Entity("Overwatch2MatchTracker.DAL.Entities.Base.Hero", b =>
                {
                    b.HasOne("Overwatch2MatchTracker.DAL.Entities.Game", null)
                        .WithMany("Heroes")
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("Overwatch2MatchTracker.DAL.Entities.Game", b =>
                {
                    b.HasOne("Overwatch2MatchTracker.DAL.Entities.GroupSize", "GroupSize")
                        .WithMany()
                        .HasForeignKey("GroupSizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Overwatch2MatchTracker.DAL.Entities.Map", "Map")
                        .WithMany()
                        .HasForeignKey("MapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Overwatch2MatchTracker.DAL.Entities.MatchResult", "MatchResult")
                        .WithMany()
                        .HasForeignKey("MatchResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Overwatch2MatchTracker.DAL.Entities.Base.Mode", "Mode")
                        .WithMany()
                        .HasForeignKey("ModeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupSize");

                    b.Navigation("Map");

                    b.Navigation("MatchResult");

                    b.Navigation("Mode");
                });

            modelBuilder.Entity("Overwatch2MatchTracker.DAL.Entities.SpecificPlayer", b =>
                {
                    b.HasOne("Overwatch2MatchTracker.DAL.Entities.Game", null)
                        .WithMany("SpecificPlayers")
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("Overwatch2MatchTracker.DAL.Entities.Game", b =>
                {
                    b.Navigation("Heroes");

                    b.Navigation("SpecificPlayers");
                });
#pragma warning restore 612, 618
        }
    }
}
